syntax = "proto3";

option go_package = ".;outingproto";

service OutingTeacher {
    rpc GetOutingWithFilter(GetOutingWithFilterRequest) returns (OutingResponse) {}
    rpc ApproveOuting(ConfirmOutingRequest) returns (ConfirmOutingResponse) {}
    rpc RejectOuting(ConfirmOutingRequest) returns (ConfirmOutingResponse) {}
    rpc CertifyOuting(ConfirmOutingRequest) returns (ConfirmOutingResponse) {}
}

message GetOutingWithFilterRequest {
    string uuid = 1;
    string status = 2;
    int32 grade = 3;
    int32 group = 4;
    int32 start = 5;
    int32 count = 6;
}

message OutingResponse {
    int32 status = 1;
    int32 code = 2;
    string msg = 3;
    repeated Outing outing = 4;
}

message Outing {
    string outing_id = 1;
    string name = 2;
    int32 grade = 3;
    int32 group = 4;
    int32 number = 5;
    string place = 6;
    string reason = 7;
    int64 start_time = 8;
    int64 end_time = 9;
    string status = 10;
    string situation = 11;
    bool is_late = 12;
}

message ConfirmOutingRequest {
    string uuid = 1;
    string outing_id = 2;
}

message ConfirmOutingResponse {
    int32 status = 1;
    int32 code = 2;
    string msg = 3;
}