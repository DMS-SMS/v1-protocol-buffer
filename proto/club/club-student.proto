syntax = "proto3";

option go_package = ".;clubproto";

service ClubStudent {
    rpc GetClubsSortByUpdateTime(GetClubsSortByUpdateTimeRequest) returns (GetClubsSortByUpdateTimeResponse) {}
    rpc GetRecruitmentsSortByCreateTime(GetRecruitmentsSortByCreateTimeRequest) returns (GetRecruitmentsSortByCreateTimeResponse) {}
    rpc GetClubInformWithUUID(GetClubInformWithUUIDRequest) returns (GetClubInformWithUUIDResponse) {}
}

message GetClubsSortByUpdateTimeRequest {
    string UUID = 1; // API를 호출한 학생 계정의 UUID (20자)
    uint32 Start = 2; // 페이징의 offset 값
    uint32 Count = 3; // 페이징의 limit 값
    string Field = 4; // 필터링의 Field 값
}

message GetClubsSortByUpdateTimeResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
    repeated ClubInform Clubs = 4; // 동아리 정보 리스트
}

message ClubInform {
    string ClubUUID = 1; // 동아리 UUID
    string Name = 2; // 동아리 이름
    string Location = 3; // 동아리실 위치
    string Concept = 4; // 동아리 한줄 소개
    string LeaderName = 5; // 동아리장 이름
    string Field = 6; // 동아리 분야
    string LogoURI = 7; // 동아리 로고 URI
}

message GetRecruitmentsSortByCreateTimeRequest {
    string UUID = 1; // API를 호출한 학생 계정의 UUID (20자)
    uint32 Start = 2; // 페이징의 offset 값
    uint32 Count = 3; // 페이징의 limit 값
    string Field = 4; // 필터링의 Field 값
}

message GetRecruitmentsSortByCreateTimeResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
    repeated RecruitmentInform Recruitments = 4; // 동아리 정보 리스트
}

message RecruitmentInform {
    string RecruitmentUUID = 1; // 모집 공고 UUID
    string ClubUUID = 2; // 동아리 공고 UUID
    string Name = 3; // 동아리 이름
    string Concept = 4; // 모집 공고 한줄 소개
    string Location = 5; // 동아리 위치
    repeated RecruitmentField RecruitmentFields = 6; // 동아리 모집 분야 리스트
    string Field = 7; // 동아리 분야
    string Type = 8; // 모집 종류 (상시 or 기각)
    string StartPeriod = 9; // 시작 기간
    string EndPeriod = 10; // 종료 기간
}

message RecruitmentField {
    uint32 grade = 1;
    string field = 2;
    uint32 number = 3;
}

message GetClubInformWithUUIDRequest {
    string UUID = 1; // API를 호출한 학생 계정의 UUID (20자)
    string ClubUUID = 2; // 조회할 동아리의 UUID (17자)
}

message GetClubInformWithUUIDResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
    string Name = 4; // 동아리 이름
    string Concept = 5; // 동아리 한줄 소개
    string Introduction = 6; // 동아리 설명
    string LeaderName = 7; // 동아리장 이름
    repeated ClubMember ClubMembers = 8; // 동아리 부원 리스트
    string Location = 9; // 동아리 위치
    string Field = 10; // 동아리 분야
    string LogoURI = 11; // 동아리 로고 URI
    string Link = 12; // 동아리 페이스북 그룹 링크
}

message ClubMember {
    uint32 Grade = 1;
    string name = 2;
}