syntax = "proto3";

package club.leader;

option go_package = ".;clubproto";

service ClubLeader {
    rpc AddClubMember(AddClubMemberRequest) returns (AddClubMemberResponse) {}
    rpc DeleteClubMember(DeleteClubMemberRequest) returns (DeleteClubMemberResponse) {}
    rpc ChangeClubLeader(ChangeClubLeaderRequest) returns (ChangeClubLeaderResponse) {}
    rpc ModifyClubInform(ModifyClubInformRequest) returns (ModifyClubInformResponse) {}
    rpc DeleteClubWithUUID(DeleteClubWithUUIDRequest) returns (DeleteClubWithUUIDResponse) {}
    rpc RegisterRecruitment(RegisterRecruitmentRequest) returns (RegisterRecruitmentResponse) {}
    rpc ModifyRecruitment(ModifyRecruitmentRequest) returns (ModifyRecruitmentResponse) {}
    rpc DeleteRecruitmentWithUUID(DeleteRecruitmentWithUUIDRequest) returns (DeleteRecruitmentWithUUIDResponse) {}
}

message AddClubMemberRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string ClubUUID = 2; // 인원을 추가할 동아리의 UUID (17자)
    string StudentUUID = 3; // 추가할 부원의 학생 UUID (20자)
}

message AddClubMemberResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
}

message DeleteClubMemberRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string ClubUUID = 2; // 인원을 추가할 동아리의 UUID (17자)
    string StudentUUID = 3; // 삭제할 부원의 학생 UUID (20자)
}

message DeleteClubMemberResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
}

message ChangeClubLeaderRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string ClubUUID = 2; // 동아리 장을 변경할 동아리의 UUID (17자)
    string NewLeaderUUID = 3; // 동아리 장으로 임명할 학생 UUID (20자)
}

message ChangeClubLeaderResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
}

message ModifyClubInformRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string ClubUUID = 2; // 정보를 수정할 동아리의 UUID (17자)
    string ClubConcept = 3; // 변경할 동아리의 한줄 소개 (0~40)
    string Introduction = 4; // 변경할 동아리의 설명 (0~150)
    string Link = 5; // 변경할 동아리의 링크
    bytes Logo = 6; // 변경할 동아리의 로고 사진
}

message ModifyClubInformResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
}

message DeleteClubWithUUIDRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string ClubUUID = 2; // 삭제할 동아리의 UUID (17자)
}

message DeleteClubWithUUIDResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
}

message RegisterRecruitmentRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string ClubUUID = 2; // 모집 공고를 등록할 동아리의 UUID (17자)
    string RecruitConcept = 3; // 모집 공고 한줄 소개 (1~40자)
    string EndPeriod = 4; // 종료 기간 (XXXX-XX-XX)
    repeated RecruitMember RecruitMembers = 5; // 모집 분야 정보 리스트
}

message RegisterRecruitmentResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
    string RecruitmentUUID = 4; // 생성된 모집 공고의 UUID
}

message ModifyRecruitmentRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string RecruitmentUUID = 2; // 수정할 모집 공고의 UUID (24자)
    string RecruitConcept = 3; // 변경할 모집 공고 한줄 소개 (1~40자)
    string EndPeriod = 4; // 변경할 종료 기간 (XXXX-XX-XX)
    repeated RecruitMember RecruitMembers = 5; // 모집 멤버 정보 리스트
}

message RecruitMember {
    string Grade = 1;
    string Field = 2;
    string Number = 3;
}

message ModifyRecruitmentResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
}

message DeleteRecruitmentWithUUIDRequest {
    string UUID = 1; // API를 호출한 동아리장의 학생 UUID (20자)
    string RecruitmentUUID = 2; // 삭제할 모집 공고의 UUID (17자)
}

message DeleteRecruitmentWithUUIDResponse {
    uint32 Status = 1; // 상태 코드
    sint32 Code = 2; // 세부 코드
    string Message = 3; // 세부 설명
}
