# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.python.club.club_leader_pb2 as club__leader__pb2


class ClubLeaderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddClubMember = channel.unary_unary(
                '/club.leader.ClubLeader/AddClubMember',
                request_serializer=club__leader__pb2.AddClubMemberRequest.SerializeToString,
                response_deserializer=club__leader__pb2.AddClubMemberResponse.FromString,
                )
        self.DeleteClubMember = channel.unary_unary(
                '/club.leader.ClubLeader/DeleteClubMember',
                request_serializer=club__leader__pb2.DeleteClubMemberRequest.SerializeToString,
                response_deserializer=club__leader__pb2.DeleteClubMemberResponse.FromString,
                )
        self.ChangeClubLeader = channel.unary_unary(
                '/club.leader.ClubLeader/ChangeClubLeader',
                request_serializer=club__leader__pb2.ChangeClubLeaderRequest.SerializeToString,
                response_deserializer=club__leader__pb2.ChangeClubLeaderResponse.FromString,
                )
        self.ModifyClubInform = channel.unary_unary(
                '/club.leader.ClubLeader/ModifyClubInform',
                request_serializer=club__leader__pb2.ModifyClubInformRequest.SerializeToString,
                response_deserializer=club__leader__pb2.ModifyClubInformResponse.FromString,
                )
        self.DeleteClubWithUUID = channel.unary_unary(
                '/club.leader.ClubLeader/DeleteClubWithUUID',
                request_serializer=club__leader__pb2.DeleteClubWithUUIDRequest.SerializeToString,
                response_deserializer=club__leader__pb2.DeleteClubWithUUIDResponse.FromString,
                )
        self.RegisterRecruitment = channel.unary_unary(
                '/club.leader.ClubLeader/RegisterRecruitment',
                request_serializer=club__leader__pb2.RegisterRecruitmentRequest.SerializeToString,
                response_deserializer=club__leader__pb2.RegisterRecruitmentResponse.FromString,
                )
        self.ModifyRecruitment = channel.unary_unary(
                '/club.leader.ClubLeader/ModifyRecruitment',
                request_serializer=club__leader__pb2.ModifyRecruitmentRequest.SerializeToString,
                response_deserializer=club__leader__pb2.ModifyRecruitmentResponse.FromString,
                )
        self.DeleteRecruitmentWithUUID = channel.unary_unary(
                '/club.leader.ClubLeader/DeleteRecruitmentWithUUID',
                request_serializer=club__leader__pb2.DeleteRecruitmentWithUUIDRequest.SerializeToString,
                response_deserializer=club__leader__pb2.DeleteRecruitmentWithUUIDResponse.FromString,
                )


class ClubLeaderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddClubMember(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClubMember(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeClubLeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyClubInform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteClubWithUUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterRecruitment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyRecruitment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRecruitmentWithUUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClubLeaderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddClubMember': grpc.unary_unary_rpc_method_handler(
                    servicer.AddClubMember,
                    request_deserializer=club__leader__pb2.AddClubMemberRequest.FromString,
                    response_serializer=club__leader__pb2.AddClubMemberResponse.SerializeToString,
            ),
            'DeleteClubMember': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClubMember,
                    request_deserializer=club__leader__pb2.DeleteClubMemberRequest.FromString,
                    response_serializer=club__leader__pb2.DeleteClubMemberResponse.SerializeToString,
            ),
            'ChangeClubLeader': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeClubLeader,
                    request_deserializer=club__leader__pb2.ChangeClubLeaderRequest.FromString,
                    response_serializer=club__leader__pb2.ChangeClubLeaderResponse.SerializeToString,
            ),
            'ModifyClubInform': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyClubInform,
                    request_deserializer=club__leader__pb2.ModifyClubInformRequest.FromString,
                    response_serializer=club__leader__pb2.ModifyClubInformResponse.SerializeToString,
            ),
            'DeleteClubWithUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteClubWithUUID,
                    request_deserializer=club__leader__pb2.DeleteClubWithUUIDRequest.FromString,
                    response_serializer=club__leader__pb2.DeleteClubWithUUIDResponse.SerializeToString,
            ),
            'RegisterRecruitment': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterRecruitment,
                    request_deserializer=club__leader__pb2.RegisterRecruitmentRequest.FromString,
                    response_serializer=club__leader__pb2.RegisterRecruitmentResponse.SerializeToString,
            ),
            'ModifyRecruitment': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyRecruitment,
                    request_deserializer=club__leader__pb2.ModifyRecruitmentRequest.FromString,
                    response_serializer=club__leader__pb2.ModifyRecruitmentResponse.SerializeToString,
            ),
            'DeleteRecruitmentWithUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRecruitmentWithUUID,
                    request_deserializer=club__leader__pb2.DeleteRecruitmentWithUUIDRequest.FromString,
                    response_serializer=club__leader__pb2.DeleteRecruitmentWithUUIDResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'club.leader.ClubLeader', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClubLeader(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddClubMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/AddClubMember',
            club__leader__pb2.AddClubMemberRequest.SerializeToString,
            club__leader__pb2.AddClubMemberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteClubMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/DeleteClubMember',
            club__leader__pb2.DeleteClubMemberRequest.SerializeToString,
            club__leader__pb2.DeleteClubMemberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeClubLeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/ChangeClubLeader',
            club__leader__pb2.ChangeClubLeaderRequest.SerializeToString,
            club__leader__pb2.ChangeClubLeaderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyClubInform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/ModifyClubInform',
            club__leader__pb2.ModifyClubInformRequest.SerializeToString,
            club__leader__pb2.ModifyClubInformResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteClubWithUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/DeleteClubWithUUID',
            club__leader__pb2.DeleteClubWithUUIDRequest.SerializeToString,
            club__leader__pb2.DeleteClubWithUUIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterRecruitment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/RegisterRecruitment',
            club__leader__pb2.RegisterRecruitmentRequest.SerializeToString,
            club__leader__pb2.RegisterRecruitmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyRecruitment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/ModifyRecruitment',
            club__leader__pb2.ModifyRecruitmentRequest.SerializeToString,
            club__leader__pb2.ModifyRecruitmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRecruitmentWithUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/club.leader.ClubLeader/DeleteRecruitmentWithUUID',
            club__leader__pb2.DeleteRecruitmentWithUUIDRequest.SerializeToString,
            club__leader__pb2.DeleteRecruitmentWithUUIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
