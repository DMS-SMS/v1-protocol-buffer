# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.python.auth.auth_teacher_pb2 as auth__teacher__pb2


class AuthTeacherStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoginTeacherAuth = channel.unary_unary(
                '/AuthTeacher/LoginTeacherAuth',
                request_serializer=auth__teacher__pb2.LoginTeacherAuthRequest.SerializeToString,
                response_deserializer=auth__teacher__pb2.LoginTeacherAuthResponse.FromString,
                )
        self.ChangeTeacherPW = channel.unary_unary(
                '/AuthTeacher/ChangeTeacherPW',
                request_serializer=auth__teacher__pb2.ChangeTeacherPWRequest.SerializeToString,
                response_deserializer=auth__teacher__pb2.ChangeTeacherPWResponse.FromString,
                )
        self.GetTeacherInformWithUUID = channel.unary_unary(
                '/AuthTeacher/GetTeacherInformWithUUID',
                request_serializer=auth__teacher__pb2.GetTeacherInformWithUUIDRequest.SerializeToString,
                response_deserializer=auth__teacher__pb2.GetTeacherInformWithUUIDResponse.FromString,
                )


class AuthTeacherServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LoginTeacherAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeTeacherPW(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTeacherInformWithUUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthTeacherServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoginTeacherAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginTeacherAuth,
                    request_deserializer=auth__teacher__pb2.LoginTeacherAuthRequest.FromString,
                    response_serializer=auth__teacher__pb2.LoginTeacherAuthResponse.SerializeToString,
            ),
            'ChangeTeacherPW': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeTeacherPW,
                    request_deserializer=auth__teacher__pb2.ChangeTeacherPWRequest.FromString,
                    response_serializer=auth__teacher__pb2.ChangeTeacherPWResponse.SerializeToString,
            ),
            'GetTeacherInformWithUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTeacherInformWithUUID,
                    request_deserializer=auth__teacher__pb2.GetTeacherInformWithUUIDRequest.FromString,
                    response_serializer=auth__teacher__pb2.GetTeacherInformWithUUIDResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AuthTeacher', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthTeacher(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LoginTeacherAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthTeacher/LoginTeacherAuth',
            auth__teacher__pb2.LoginTeacherAuthRequest.SerializeToString,
            auth__teacher__pb2.LoginTeacherAuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeTeacherPW(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthTeacher/ChangeTeacherPW',
            auth__teacher__pb2.ChangeTeacherPWRequest.SerializeToString,
            auth__teacher__pb2.ChangeTeacherPWResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTeacherInformWithUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AuthTeacher/GetTeacherInformWithUUID',
            auth__teacher__pb2.GetTeacherInformWithUUIDRequest.SerializeToString,
            auth__teacher__pb2.GetTeacherInformWithUUIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
