// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: auth-admin.proto

package authproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AuthAdmin service

type AuthAdminService interface {
	CreateNewStudent(ctx context.Context, in *CreateNewStudentRequest, opts ...client.CallOption) (*CreateNewStudentResponse, error)
	CreateNewParent(ctx context.Context, in *CreateNewParentRequest, opts ...client.CallOption) (*CreateNewParentResponse, error)
	LoginAdminAuth(ctx context.Context, in *LoginAdminAuthRequest, opts ...client.CallOption) (*LoginAdminAuthResponse, error)
	AddUnsignedStudents(ctx context.Context, in *AddUnsignedStudentsRequest, opts ...client.CallOption) (*AddUnsignedStudentsResponse, error)
	SendJoinSMSToUnsignedStudents(ctx context.Context, in *SendJoinSMSToUnsignedStudentsRequest, opts ...client.CallOption) (*SendJoinSMSToUnsignedStudentsResponse, error)
}

type authAdminService struct {
	c    client.Client
	name string
}

func NewAuthAdminService(name string, c client.Client) AuthAdminService {
	return &authAdminService{
		c:    c,
		name: name,
	}
}

func (c *authAdminService) CreateNewStudent(ctx context.Context, in *CreateNewStudentRequest, opts ...client.CallOption) (*CreateNewStudentResponse, error) {
	req := c.c.NewRequest(c.name, "AuthAdmin.CreateNewStudent", in)
	out := new(CreateNewStudentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAdminService) CreateNewParent(ctx context.Context, in *CreateNewParentRequest, opts ...client.CallOption) (*CreateNewParentResponse, error) {
	req := c.c.NewRequest(c.name, "AuthAdmin.CreateNewParent", in)
	out := new(CreateNewParentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAdminService) LoginAdminAuth(ctx context.Context, in *LoginAdminAuthRequest, opts ...client.CallOption) (*LoginAdminAuthResponse, error) {
	req := c.c.NewRequest(c.name, "AuthAdmin.LoginAdminAuth", in)
	out := new(LoginAdminAuthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAdminService) AddUnsignedStudents(ctx context.Context, in *AddUnsignedStudentsRequest, opts ...client.CallOption) (*AddUnsignedStudentsResponse, error) {
	req := c.c.NewRequest(c.name, "AuthAdmin.AddUnsignedStudents", in)
	out := new(AddUnsignedStudentsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authAdminService) SendJoinSMSToUnsignedStudents(ctx context.Context, in *SendJoinSMSToUnsignedStudentsRequest, opts ...client.CallOption) (*SendJoinSMSToUnsignedStudentsResponse, error) {
	req := c.c.NewRequest(c.name, "AuthAdmin.SendJoinSMSToUnsignedStudents", in)
	out := new(SendJoinSMSToUnsignedStudentsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthAdmin service

type AuthAdminHandler interface {
	CreateNewStudent(context.Context, *CreateNewStudentRequest, *CreateNewStudentResponse) error
	CreateNewParent(context.Context, *CreateNewParentRequest, *CreateNewParentResponse) error
	LoginAdminAuth(context.Context, *LoginAdminAuthRequest, *LoginAdminAuthResponse) error
	AddUnsignedStudents(context.Context, *AddUnsignedStudentsRequest, *AddUnsignedStudentsResponse) error
	SendJoinSMSToUnsignedStudents(context.Context, *SendJoinSMSToUnsignedStudentsRequest, *SendJoinSMSToUnsignedStudentsResponse) error
}

func RegisterAuthAdminHandler(s server.Server, hdlr AuthAdminHandler, opts ...server.HandlerOption) error {
	type authAdmin interface {
		CreateNewStudent(ctx context.Context, in *CreateNewStudentRequest, out *CreateNewStudentResponse) error
		CreateNewParent(ctx context.Context, in *CreateNewParentRequest, out *CreateNewParentResponse) error
		LoginAdminAuth(ctx context.Context, in *LoginAdminAuthRequest, out *LoginAdminAuthResponse) error
		AddUnsignedStudents(ctx context.Context, in *AddUnsignedStudentsRequest, out *AddUnsignedStudentsResponse) error
		SendJoinSMSToUnsignedStudents(ctx context.Context, in *SendJoinSMSToUnsignedStudentsRequest, out *SendJoinSMSToUnsignedStudentsResponse) error
	}
	type AuthAdmin struct {
		authAdmin
	}
	h := &authAdminHandler{hdlr}
	return s.Handle(s.NewHandler(&AuthAdmin{h}, opts...))
}

type authAdminHandler struct {
	AuthAdminHandler
}

func (h *authAdminHandler) CreateNewStudent(ctx context.Context, in *CreateNewStudentRequest, out *CreateNewStudentResponse) error {
	return h.AuthAdminHandler.CreateNewStudent(ctx, in, out)
}

func (h *authAdminHandler) CreateNewParent(ctx context.Context, in *CreateNewParentRequest, out *CreateNewParentResponse) error {
	return h.AuthAdminHandler.CreateNewParent(ctx, in, out)
}

func (h *authAdminHandler) LoginAdminAuth(ctx context.Context, in *LoginAdminAuthRequest, out *LoginAdminAuthResponse) error {
	return h.AuthAdminHandler.LoginAdminAuth(ctx, in, out)
}

func (h *authAdminHandler) AddUnsignedStudents(ctx context.Context, in *AddUnsignedStudentsRequest, out *AddUnsignedStudentsResponse) error {
	return h.AuthAdminHandler.AddUnsignedStudents(ctx, in, out)
}

func (h *authAdminHandler) SendJoinSMSToUnsignedStudents(ctx context.Context, in *SendJoinSMSToUnsignedStudentsRequest, out *SendJoinSMSToUnsignedStudentsResponse) error {
	return h.AuthAdminHandler.SendJoinSMSToUnsignedStudents(ctx, in, out)
}
