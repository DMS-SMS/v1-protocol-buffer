// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: auth-teacher.proto

package authproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AuthTeacher service

type AuthTeacherService interface {
	LoginTeacherAuth(ctx context.Context, in *LoginTeacherAuthRequest, opts ...client.CallOption) (*LoginTeacherAuthResponse, error)
	ChangeTeacherAuthPw(ctx context.Context, in *ChangeTeacherAuthPwRequest, opts ...client.CallOption) (*ChangeTeacherAuthPwResponse, error)
	GetTeacherUserInform(ctx context.Context, in *GetTeacherUserInformRequest, opts ...client.CallOption) (*GetTeacherUserInformResponse, error)
}

type authTeacherService struct {
	c    client.Client
	name string
}

func NewAuthTeacherService(name string, c client.Client) AuthTeacherService {
	return &authTeacherService{
		c:    c,
		name: name,
	}
}

func (c *authTeacherService) LoginTeacherAuth(ctx context.Context, in *LoginTeacherAuthRequest, opts ...client.CallOption) (*LoginTeacherAuthResponse, error) {
	req := c.c.NewRequest(c.name, "AuthTeacher.LoginTeacherAuth", in)
	out := new(LoginTeacherAuthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTeacherService) ChangeTeacherAuthPw(ctx context.Context, in *ChangeTeacherAuthPwRequest, opts ...client.CallOption) (*ChangeTeacherAuthPwResponse, error) {
	req := c.c.NewRequest(c.name, "AuthTeacher.ChangeTeacherAuthPw", in)
	out := new(ChangeTeacherAuthPwResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authTeacherService) GetTeacherUserInform(ctx context.Context, in *GetTeacherUserInformRequest, opts ...client.CallOption) (*GetTeacherUserInformResponse, error) {
	req := c.c.NewRequest(c.name, "AuthTeacher.GetTeacherUserInform", in)
	out := new(GetTeacherUserInformResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthTeacher service

type AuthTeacherHandler interface {
	LoginTeacherAuth(context.Context, *LoginTeacherAuthRequest, *LoginTeacherAuthResponse) error
	ChangeTeacherAuthPw(context.Context, *ChangeTeacherAuthPwRequest, *ChangeTeacherAuthPwResponse) error
	GetTeacherUserInform(context.Context, *GetTeacherUserInformRequest, *GetTeacherUserInformResponse) error
}

func RegisterAuthTeacherHandler(s server.Server, hdlr AuthTeacherHandler, opts ...server.HandlerOption) error {
	type authTeacher interface {
		LoginTeacherAuth(ctx context.Context, in *LoginTeacherAuthRequest, out *LoginTeacherAuthResponse) error
		ChangeTeacherAuthPw(ctx context.Context, in *ChangeTeacherAuthPwRequest, out *ChangeTeacherAuthPwResponse) error
		GetTeacherUserInform(ctx context.Context, in *GetTeacherUserInformRequest, out *GetTeacherUserInformResponse) error
	}
	type AuthTeacher struct {
		authTeacher
	}
	h := &authTeacherHandler{hdlr}
	return s.Handle(s.NewHandler(&AuthTeacher{h}, opts...))
}

type authTeacherHandler struct {
	AuthTeacherHandler
}

func (h *authTeacherHandler) LoginTeacherAuth(ctx context.Context, in *LoginTeacherAuthRequest, out *LoginTeacherAuthResponse) error {
	return h.AuthTeacherHandler.LoginTeacherAuth(ctx, in, out)
}

func (h *authTeacherHandler) ChangeTeacherAuthPw(ctx context.Context, in *ChangeTeacherAuthPwRequest, out *ChangeTeacherAuthPwResponse) error {
	return h.AuthTeacherHandler.ChangeTeacherAuthPw(ctx, in, out)
}

func (h *authTeacherHandler) GetTeacherUserInform(ctx context.Context, in *GetTeacherUserInformRequest, out *GetTeacherUserInformResponse) error {
	return h.AuthTeacherHandler.GetTeacherUserInform(ctx, in, out)
}
